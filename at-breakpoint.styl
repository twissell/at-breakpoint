/*
 * hash with all breakpoints, define
 * here your breakpoint or use add-bp
 * function.
 */
$BPS = {}

$SUFFIX-MODE = true

/*
 * wrapper for media queries, allows
 * to put any stylus code inside a media
 * querie.
 *
 * @param string(bp-name)
 * @param string(features)
 * @param bool(suffix)
 * @param string(excludes)
 */
at-breakpoint(bp-name, features=null, suffix=$SUFFIX-MODE, excludes=null)

  if bp-name == 'all'
    for k, v in $BPS
      if not k in excludes
        at-breakpoint(k, v, suffix)
  else
    if bp-name in $BPS
      declaration = build-declaration($BPS[bp-name])
    
      if suffix
        &-{bp-name}
          @media declaration
            {block}
      else
        @media declaration
          {block}
    else
      add-bp(bp-name)
      at-breakpoint(bp-name, features, suffix)

/*
 * add a new breakpoint to $BPS
 * hash.
 *
 * @param string(name)
 * @param string(features)
 */
add-bp(name, features)
  $BPS[name] = features

/*
 * builds a declaration string from
 * a string of features.
 *
 * @param string(features)
 */   
build-declaration(features)
  r = 'screen and '
  i = 1
  features = parse-features(features)
  for feature-name, feature-value in features
    r  += '(' + feature-name + ': ' + feature-value + ')'
    if i != length(features)
      r += ' and '
    i += 1
  return r  
    
/*
 * returns a hash of media features with
 * feature names as keys and feature 
 * values as values. Has shortcuts for min 
 * width and for min max width media querie
 * pairs.
 *
 * @param string(features) 
 *
 * 350px -> {min-width: 350px}
 * 350px 780px -> {min-width: 350px, max-width: 350px}
 */    
parse-features(features)

  r = {}
  i = 0
  for _ in features
    current = features[i]
    next = features[i + 1]

    if typeof(current) == 'unit'
      if typeof(next) == 'unit'
        r['min-width'] = current
        r['max-width'] = next
        i += 1
      else if typeof(next) != 'unit'
        r['min-width'] = current
      i += 1
    if typeof(current) == 'string' 
      if typeof(next) == 'unit'
        r[current] = next
        age
        error('media querie feature ' + current + ' must have a value')
      i += 1
  return r
