@import 'breakpoints'

is-unit(value)
  if typeof(value) == 'unit'
    return true
  else
    return false

is-string(value)
  if typeof(value) == 'string'
    return true
  else
    return false

/*
 * wrapper for media queries, allows
 * to put any stylus code inside a media
 * querie.
 *
 * @param string(bp-name)
 * @param string(features)
 * @param bool(suffix)
 */
at-breakpoint(bp-name, features=null, suffix=false, excludes=null)

  if bp-name == 'all'
    for k, v in $bps
      if not k in excludes
        at-breakpoint(k, v, suffix)
  else
    if bp-exists(bp-name)
      declaration = build-declaration($bps[bp-name])

      if suffix
        &-{bp-name}
          @media declaration
            {block}
      else
        @media declaration
          {block}
    else
      $bps[bp-name] = features
      at-breakpoint(bp-name, features, suffix)

/*
 * returns true if exists a breakpoint
 * in $bps hash with same name, false
 * otherwise.
 *
 * @param string(name)
 */
bp-exists(name)    
  for bp-name in $bps
    if bp-name == name
      return true
  return false

/*
 * builds a declaration string from
 * a string of features.
 *
 * @param string(features)
 */   
build-declaration(features)
  r = 'screen and '
  i = 1
  features = parse-features(features)
  for feature-name, feature-value in features
    r  += '(' + feature-name + ': ' + feature-value + ')'
    if i != length(features)
      r += ' and '
    i += 1
  return r  
    
/*
 * returns a hash of media features with
 * feature names as keys and feature 
 * values as values. Has shortcuts for min 
 * width and for min max width media querie
 * pairs.
 *
 * @param string(features) 
 *
 * 350px -> {min-width: 350px}
 * 350px 780px -> {min-width: 350px, max-width: 350px}
 */    
parse-features(features)

  r = {}

  i = 0
  for _ in features
    current = features[i]
    next    = features[i + 1]

    if is-unit(current) 
      if is-unit(next)
        r['min-width'] = current
        r['max-width'] = next
        i += 1
      else if not is-unit(next)
        r['min-width'] = current
      i += 1
    if is-string(current) 
      if is-unit(next)
        r[current] = next
        i += 1
      else
        error('media querie feature ' + current + ' must have a value')
      i += 1
  return r
